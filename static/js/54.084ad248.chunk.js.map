{"version":3,"file":"static/js/54.084ad248.chunk.js","mappings":"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","sources":["webpack://contacts-manager/./src/pages/Registration/registration.module.scss?eb7c","webpack://contacts-manager/./src/components/FormModals/ResendEmailForm/ResendEmail.module.scss?f681","components/FormModals/ResendEmailForm/ResendEmail.js","pages/Registration/registration.js","webpack://contacts-manager/./src/shared/components/FormMessage/FormMessage.module.scss?d2dd","shared/components/FormMessage/FormMessage.js","webpack://contacts-manager/./src/shared/components/button/button.module.scss?f699","shared/components/button/button.js","webpack://contacts-manager/./src/shared/components/input/input.module.scss?7a8e","shared/components/input/input.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"registration_wrapper__2kOVu\",\"form\":\"registration_form__cNB6x\",\"formRegister\":\"registration_formRegister__k1Av1\",\"inputForm\":\"registration_inputForm__U407G\",\"inputDesc\":\"registration_inputDesc__OnMQi\",\"inputError\":\"registration_inputError__U+aHG\",\"inputSuccess\":\"registration_inputSuccess__zeFDN\",\"formButton\":\"registration_formButton__q6gRI\",\"formLink\":\"registration_formLink__PH-ts\",\"modalRegister\":\"registration_modalRegister__1XzcU\",\"formModal\":\"registration_formModal__Odlz3\"};","// extracted by mini-css-extract-plugin\nexport default {\"formEmail\":\"ResendEmail_formEmail__I2Ws3\"};","import css from './ResendEmail.module.scss';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Input from '../../../shared/components/input/input';\r\nimport Button from '../../../shared/components/button/button';\r\nimport { useState } from 'react';\r\nimport { verifyEmailOperation } from '../../../redux/auth/operations';\r\nimport { useDispatch } from 'react-redux';\r\nimport FormMessage from '../../../shared/components/FormMessage/FormMessage';\r\n\r\nconst sendEmailSchema = Yup.object().shape({\r\n  email: Yup.string().email('Invalid email').required('Required'),\r\n});\r\n\r\nconst ResendEmail = () => {\r\n  const [info, setInfo] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onModalSumbit = async email => {\r\n    const result = await dispatch(verifyEmailOperation(email));\r\n    if (result.error) {\r\n      setInfo('fail');\r\n    }\r\n    setInfo('ok');\r\n  };\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n      }}\r\n      validationSchema={sendEmailSchema}\r\n      onSubmit={onModalSumbit}\r\n    >\r\n      {({ handleChange }) => (\r\n        <Form className={css.formModal}>\r\n          <h3>Resend email</h3>\r\n          <Input\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <Button>Send</Button>\r\n          <FormMessage type={info}>\r\n            {info === 'ok'\r\n              ? 'Email sent'\r\n              : 'Email alredy confirmed or never registered'}\r\n          </FormMessage>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ResendEmail;\r\n","import { useDispatch } from 'react-redux';\r\nimport {\r\n  registerOperation,\r\n  verifyEmailOperation,\r\n} from '../../redux/auth/operations';\r\nimport css from './registration.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport Input from '../../shared/components/input/input';\r\nimport Button from '../../shared/components/button/button';\r\nimport FormMessage from '../../shared/components/FormMessage/FormMessage';\r\nimport Modal from '../../shared/components/modal/Modal';\r\nimport ResendEmail from '../../components/FormModals/ResendEmailForm/ResendEmail';\r\n\r\nconst RegistrSchema = Yup.object().shape({\r\n  name: Yup.string().required('Required'),\r\n  email: Yup.string().email('Invalid email').required('Required'),\r\n  password: Yup.string()\r\n    .min(6, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n  confirmPass: Yup.string()\r\n    .oneOf([Yup.ref('password'), null], \"Passwords don't match\")\r\n    .required('Required'),\r\n});\r\n\r\nconst Registration = () => {\r\n  const dispatch = useDispatch();\r\n  const [info, setInfo] = useState(false);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => setOpen(false);\r\n\r\n  const onFormSubmit = async (credentials, { resetForm }) => {\r\n    const { email, password, name } = credentials;\r\n\r\n    const result = await dispatch(registerOperation({ email, password, name }));\r\n    if (result.error) {\r\n      setInfo('ok');\r\n    }\r\n    setInfo('fail');\r\n    resetForm();\r\n  };\r\n  // const onModalSumbit = async email => {\r\n  //   //const email = e.currentTarget.confirm.value;\r\n  //   console.log(email);\r\n  //   const result = await dispatch(verifyEmailOperation(email));\r\n  //   if (result.error) {\r\n  //     setInfo('');\r\n  //   }\r\n  //   //setOpen(false);\r\n  //   setInfo('green');\r\n  // };\r\n\r\n  return (\r\n    <div className={css.wrapper}>\r\n      {open && (\r\n        <Modal onClose={onCloseModal}>\r\n          <ResendEmail />\r\n        </Modal>\r\n      )}\r\n\r\n      <Formik\r\n        initialValues={{\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n          confirmPass: '',\r\n        }}\r\n        validationSchema={RegistrSchema}\r\n        onSubmit={onFormSubmit}\r\n      >\r\n        {({ errors, touched, handleChange }) => (\r\n          <Form className={css.form}>\r\n            <h3>Sing Up</h3>\r\n            <Input\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              height=\"30px\"\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <Input\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              height=\"30px\"\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <Input\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              height=\"30px\"\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <Input\r\n              label=\"Confirm password\"\r\n              name=\"confirmPass\"\r\n              type=\"password\"\r\n              placeholder=\"Repeat password\"\r\n              height=\"30px\"\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <FormMessage type={info}>\r\n              {info === 'ok'\r\n                ? 'Check your email and confirm it'\r\n                : 'This email is already used'}\r\n            </FormMessage>\r\n\r\n            <button className={css.formButton} type=\"submit\">\r\n              Register\r\n            </button>\r\n            <p>\r\n              Already have an account ?{' '}\r\n              <Link className={css.formLink} to=\"/\">\r\n                Sing in\r\n              </Link>\r\n            </p>\r\n            <p>\r\n              <span onClick={onOpenModal} className={css.formLink}>\r\n                Send\r\n              </span>{' '}\r\n              me confirm message again\r\n            </p>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"FormMessage_message__NxOow\"};","import css from './FormMessage.module.scss';\r\n\r\nconst FormMessage = ({ type, children }) => {\r\n  const style = {\r\n    color: type === 'ok' ? 'green' : 'red',\r\n  };\r\n\r\n  return (\r\n    <p style={style} className={css.message}>\r\n      {children}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default FormMessage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button_button__7m3ti\"};","import css from './button.module.scss';\r\n\r\nconst Button = ({ type = 'submit', children, theme }) => {\r\n  return (\r\n    <button type={type} className={css.button}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_input__ZfMkm\",\"label\":\"input_label__wADP9\",\"message\":\"input_message__XoKrR\"};","import css from './input.module.scss';\r\nimport { Field, ErrorMessage, useField } from 'formik';\r\n\r\nconst Input = ({ name, label, height, ...rest }) => {\r\n  const field = useField(name);\r\n  const style = {\r\n    height,\r\n  };\r\n  return (\r\n    <label className={css.label}>\r\n      <span>{label}</span>\r\n      <Field\r\n        {...field}\r\n        {...rest}\r\n        name={name}\r\n        style={style}\r\n        className={css.input}\r\n      />\r\n      <ErrorMessage\r\n        name={name}\r\n        render={msg => <div className={css.message}>{msg}</div>}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"names":["sendEmailSchema","Yup","shape","email","required","_useState","useState","_useState2","_slicedToArray","info","setInfo","dispatch","useDispatch","onModalSumbit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","verifyEmailOperation","sent","error","stop","_x","apply","arguments","_jsx","Formik","initialValues","validationSchema","onSubmit","children","_ref2","handleChange","_jsxs","Form","className","css","formModal","Input","label","type","placeholder","name","onChange","Button","FormMessage","RegistrSchema","password","min","max","confirmPass","oneOf","_useState3","_useState4","open","setOpen","onOpenModal","onFormSubmit","credentials","resetForm","registerOperation","_x2","Modal","onClose","ResendEmail","_ref3","errors","touched","height","Link","to","onClick","style","color","_ref$type","theme","rest","_objectWithoutProperties","_excluded","field","useField","Field","_objectSpread","ErrorMessage","render","msg"],"sourceRoot":""}