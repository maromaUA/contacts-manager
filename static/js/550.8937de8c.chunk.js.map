{"version":3,"file":"static/js/550.8937de8c.chunk.js","mappings":"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","sources":["webpack://contacts-manager/./src/pages/HomePage/homepage.module.scss?d61f","redux/contacts/selectors.js","webpack://contacts-manager/./src/components/FormModals/AddContactForm/AddContactForm.module.scss?a149","components/FormModals/AddContactForm/AddContactForm.js","pages/HomePage/homepage.js","webpack://contacts-manager/./src/shared/components/input/input.module.scss?7a8e","shared/components/input/input.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"homepage_wrapper__jZDoH\",\"modalWrapper\":\"homepage_modalWrapper__XpGYu\",\"listContacts\":\"homepage_listContacts__zNc3h\",\"liContent\":\"homepage_liContent__N1XnS\",\"liActions\":\"homepage_liActions__EEQFM\",\"contact\":\"homepage_contact__v9U11\",\"addButton\":\"homepage_addButton__qJnhb\"};","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.filter;\r\nexport const getLoading = state => state.contacts.isLoading;","// extracted by mini-css-extract-plugin\nexport default {\"formAddContact\":\"AddContactForm_formAddContact__B5TgU\",\"formButton\":\"AddContactForm_formButton__-5rdr\"};","import css from './AddContactForm.module.scss';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form } from 'formik';\r\nimport Input from '../../../shared/components/input/input';\r\nimport { useDispatch } from 'react-redux';\r\nimport { postContactOperation } from '../../../redux/contacts/operations';\r\n\r\nconst addContactSchema = Yup.object().shape({\r\n  name: Yup.string().required('Required'),\r\n  email: Yup.string().email('Invalid email').required('Required'),\r\n});\r\n\r\nconst AddContactForm = ({ title = 'Add contact', initialValues }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onFormSubmit = (values, { resetForm }) => {\r\n    dispatch(postContactOperation(values));\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        ...initialValues,\r\n      }}\r\n      validationSchema={addContactSchema}\r\n      onSubmit={onFormSubmit}\r\n    >\r\n      {({ handleChange }) => (\r\n        <Form className={css.formAddContact}>\r\n          <h3>{title}</h3>\r\n          <Input\r\n            label=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            label=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={handleChange}\r\n          />\r\n          <Input\r\n            label=\"phone\"\r\n            name=\"phone\"\r\n            type=\"phone\"\r\n            placeholder=\"Enter phone\"\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <button className={css.formButton} type=\"submit\">\r\n            Add\r\n          </button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddContactForm;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport css from './homepage.module.scss';\r\nimport {\r\n  getContactsOperation,\r\n  changeFavoriteOperation,\r\n  deleteContactOperation,\r\n  updateContactOperation,\r\n} from '../../redux/contacts/operations';\r\nimport { useEffect, useState } from 'react';\r\nimport { getContacts } from '../../redux/contacts/selectors';\r\nimport { FaHeart, FaTrash, FaPen } from 'react-icons/fa6';\r\n\r\nimport Modal from '../../shared/components/modal/Modal';\r\nimport AddContactForm from '../../components/FormModals/AddContactForm/AddContactForm';\r\n\r\nconst Homepage = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const [open, setOpen] = useState(false);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [editInitialValues, setEditInitialValues] = useState({});\r\n\r\n  const onOpenModal = () => setOpen(true);\r\n  const onCloseModal = () => setOpen(false);\r\n\r\n  const onEditOpen = () => setOpenEdit(true);\r\n  const onEditClose = () => setOpenEdit(false);\r\n\r\n  const onEditHandler = (name = '', email = '', phone = '') => {\r\n    setEditInitialValues(editInitialValues => ({\r\n      ...editInitialValues,\r\n      name,\r\n      email,\r\n      phone,\r\n    }));\r\n    onEditOpen();\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getContactsOperation());\r\n  }, [dispatch]);\r\n\r\n  const onFavoriteHandler = (id, favorite) => {\r\n    const body = { favorite: !favorite };\r\n\r\n    dispatch(changeFavoriteOperation({ id, body }));\r\n  };\r\n  const onDeleteHandler = id => {\r\n    dispatch(deleteContactOperation(id));\r\n  };\r\n\r\n  async function editNameHandler(e, email, phone, favorite, id) {\r\n    console.log(e);\r\n    const body = {\r\n      name: e.currentTarget.textContent,\r\n      email,\r\n      phone,\r\n      favorite,\r\n    };\r\n    const result = await dispatch(updateContactOperation({ id, body }));\r\n    console.log('result:', result);\r\n    if (result.meta.requestStatus === 'rejected') {\r\n      alert('wrong name');\r\n    }\r\n  }\r\n\r\n  function editEmailHandler(e, name, phone, favorite, id) {\r\n    const body = {\r\n      email: e.currentTarget.textContent,\r\n      name,\r\n      phone,\r\n      favorite,\r\n    };\r\n    dispatch(updateContactOperation({ id, body }));\r\n  }\r\n\r\n  function editPhoneHandler(e, name, email, favorite, id) {\r\n    const body = {\r\n      phone: e.currentTarget.textContent,\r\n      name,\r\n      email,\r\n      favorite,\r\n    };\r\n    dispatch(updateContactOperation({ id, body }));\r\n    console.log(e);\r\n  }\r\n\r\n  const result = contacts.map(({ _id, name, email, phone, favorite }) => (\r\n    <li key={_id} className={css.contact}>\r\n      <div className={css.liContent}>\r\n        <p>\r\n          Name:{' '}\r\n          <span\r\n            contentEditable=\"true\"\r\n            onInput={e => editNameHandler(e, email, phone, favorite, _id)}\r\n          >\r\n            {name}\r\n          </span>\r\n        </p>\r\n        <p>\r\n          Email:{' '}\r\n          <span\r\n            contentEditable=\"true\"\r\n            onInput={e => editEmailHandler(e, name, phone, favorite, _id)}\r\n          >\r\n            {email}\r\n          </span>\r\n        </p>\r\n        <p>\r\n          Phone:{' '}\r\n          <span\r\n            contentEditable=\"true\"\r\n            onInput={e => editPhoneHandler(e, name, email, favorite, _id)}\r\n          >\r\n            {phone}\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <ul className={css.liActions}>\r\n        <li onClick={() => onFavoriteHandler(_id, favorite)}>\r\n          <FaHeart\r\n            color={favorite ? 'red' : 'gray'}\r\n            border=\"black\"\r\n            size=\"25px\"\r\n          />\r\n        </li>\r\n        <li onClick={() => onEditHandler(name, email, phone)}>\r\n          <FaPen size=\"25px\" />\r\n        </li>\r\n        <li onClick={() => onDeleteHandler(_id)}>\r\n          <FaTrash size=\"25px\" />\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <Modal onClose={onCloseModal}>\r\n          <AddContactForm />\r\n        </Modal>\r\n      )}\r\n      {openEdit && (\r\n        <Modal onClose={onEditClose}>\r\n          <AddContactForm\r\n            title=\"Edit contact\"\r\n            initialValues={editInitialValues}\r\n          />\r\n        </Modal>\r\n      )}\r\n      <div className={css.wrapper}>\r\n        <button className={css.addButton} type=\"button\" onClick={onOpenModal}>\r\n          Add Contact\r\n        </button>\r\n\r\n        <h2>List of contacts</h2>\r\n\r\n        <ul className={css.listContacts}>{result}</ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"input_input__ZfMkm\",\"label\":\"input_label__wADP9\",\"message\":\"input_message__XoKrR\"};","import css from './input.module.scss';\r\nimport { Field, ErrorMessage, useField } from 'formik';\r\n\r\nconst Input = ({ name, label, height, ...rest }) => {\r\n  const field = useField(name);\r\n  const style = {\r\n    height,\r\n  };\r\n  return (\r\n    <label className={css.label}>\r\n      <span>{label}</span>\r\n      <Field\r\n        {...field}\r\n        {...rest}\r\n        name={name}\r\n        style={style}\r\n        className={css.input}\r\n      />\r\n      <ErrorMessage\r\n        name={name}\r\n        render={msg => <div className={css.message}>{msg}</div>}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"names":["getContacts","state","contacts","items","addContactSchema","Yup","shape","name","required","email","_ref","_ref$title","title","initialValues","dispatch","useDispatch","_jsx","Formik","_objectSpread","validationSchema","onSubmit","values","_ref2","resetForm","postContactOperation","children","_ref3","handleChange","_jsxs","Form","className","css","Input","label","type","placeholder","onChange","useSelector","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","openEdit","setOpenEdit","_useState5","_useState6","editInitialValues","setEditInitialValues","onEditHandler","arguments","length","undefined","phone","useEffect","getContactsOperation","_editNameHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","favorite","id","body","result","wrap","_context","prev","next","console","log","currentTarget","textContent","updateContactOperation","sent","meta","requestStatus","alert","stop","apply","map","_id","contentEditable","onInput","_x","_x2","_x3","_x4","_x5","editNameHandler","editEmailHandler","editPhoneHandler","onClick","changeFavoriteOperation","onFavoriteHandler","FaHeart","color","border","size","FaPen","deleteContactOperation","FaTrash","_Fragment","Modal","onClose","AddContactForm","height","rest","_objectWithoutProperties","_excluded","field","useField","style","Field","ErrorMessage","render","msg"],"sourceRoot":""}